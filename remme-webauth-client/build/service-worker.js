"use strict";var precacheConfig=[["/index.html","71f2b0711a64aa91f3f6607d08acfbf2"],["/static/css/main.7ef4d4b8.css","25cd4c325a3f46e00cba920242a1f8df"],["/static/js/main.6c09af50.js","e29a4594321dcafcaa9379281c1be79c"],["/static/media/blockexplorer.e47f04fd.png","e47f04fdff0749d4412d2f3cc9d35832"],["/static/media/congrats.9189058a.gif","9189058ac92423235598a88a69cd7b96"],["/static/media/feedback.e4e777bf.png","e4e777bf3f5941c7576d3dc1e62d5699"],["/static/media/googleauth.25defe94.png","25defe9413ee435526bc3896cf72423c"],["/static/media/monitoring.20d13389.png","20d133894ec0475867ff600b555caf5e"],["/static/media/remme-blockchain-explorer-recent.4748c272.png","4748c272b8b462df3ca53c227305bee0"],["/static/media/remme-claim-tokens-button.3843baf9.png","3843baf97e0f70abd2b68e3ad3adcbaa"],["/static/media/remme-claim-tokens-form.3663f7c2.png","3663f7c2a784305222008eee7aee4244"],["/static/media/remme-downloaded-file.6ab22cc2.png","6ab22cc221f93e7fca9a5f23d135a605"],["/static/media/remme-faq-notice-file.bfb45f3b.png","bfb45f3b90c4bfc7cf233d94b22e71bf"],["/static/media/remme-keystore-file.fdfe5710.png","fdfe5710dcc339605a938c2bf3da58eb"],["/static/media/remme-login-2.fb79864f.png","fb79864fa7283c6e6dab882a8e52d62e"],["/static/media/remme-login-enter-password.75baf90c.png","75baf90c6d67773bc9fc1325e2176c92"],["/static/media/remme-login-select-certificate.df972c72.png","df972c724219f233c8c138c84cc553a9"],["/static/media/remme-login-success.204c5071.png","204c50715e27f48115c194eebf7ef46a"],["/static/media/remme-register-page.7d42ce34.png","7d42ce34c017b135dcf0c35f208fb30d"],["/static/media/remme-registration-details.c8a9042f.png","c8a9042f1a721235d60ba3e6a0a26725"],["/static/media/remme-registration-second-factor.e3fb6e52.png","e3fb6e527cf544adbd4de022010edec2"],["/static/media/remme-revoke-button.bd4c0bec.png","bd4c0becd1713b7b281519d04730428b"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,a,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),c.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return a.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),c=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),c]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!a.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,a=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),e=urlsToCacheKeys.has(a));var c="/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(a=new URL(c,self.location).toString(),e=urlsToCacheKeys.has(a)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});